plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group 'com.krld'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar() {
    archiveName = '../../strategy.jar'
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'Runner'
    }
}

application {
    mainClassName = 'Runner'
}

task doZip(type: Exec) {

    commandLine 'sh', '-c', 'cd ./src/main/kotlin;' +
            ' zip -r -X "../../../lastSources.zip" * -x LibGdxPainter.java -x LibGdxObj.java -x LibGdxShower.java ' +
            '-x LibGdxDataToPaint.java && cd ../../../'
}

task delay(type: Exec, dependsOn: 'startLr') {
    commandLine 'sh', '-c', 'sleep 1'
}

task runApp(type:JavaExec, dependsOn: [doZip, shadowJar]) {
    classpath = sourceSets.main.runtimeClasspath

    main = "Runner"
}